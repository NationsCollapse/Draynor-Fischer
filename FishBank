package Fisher;
import java.util.Random;

import org.powerbot.core.script.job.state.Node;
import org.powerbot.game.api.methods.Walking;
import org.powerbot.game.api.methods.tab.Inventory;
import org.powerbot.game.api.methods.widget.DepositBox;
import org.powerbot.game.api.wrappers.Area;
import org.powerbot.game.api.wrappers.Locatable;
import org.powerbot.game.api.wrappers.Tile;




public class FishBank extends Node {

  private static final Locatable Bank = new Tile(3094, 3245,0);
	private static final Locatable Bank1 = new Tile(3093, 3244,0);
	private static final Locatable Bank2 = new Tile(3093, 3246,0);
	public static final Area Bank_Area = new Area(new Tile[] { new Tile(3088, 3248, 0), new Tile(3095, 3246, 0), new Tile(3096, 3241, 0), 
			new Tile(3088, 3241, 0) });
	@Override
	public boolean activate() {
		if(Inventory.isFull())
		return Walking.walk(Bank);
		return false;
	}

	@Override
	public void execute() {
		if(DepositBox.open()) { 
			sleep(400,600);
			DepositBox.depositInventory();
		}else {
			int RandomPathWalk = 0;
			Random r = new Random();
	RandomPathWalk = r.nextInt(4);
	
	switch (RandomPathWalk) {
		case 0: 
			sleep(8500,9000);
			Walking.walk(Bank1);
			break;
		case 1: 
			Walking.walk(Bank2);
			break;
		case 2: 
			Walking.walk(Bank);
			break;
		case 3: 
				Walking.walk(Bank);
				sleep(7000,9000);
			break;
	}
		
	}

}
}
